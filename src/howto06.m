% HOWTO NO. 6: Synthesis of other functions than gravity field quantities,
% e.g. planetary topographies
%
% All the GrafLab input parameters are explained in "../doc/graflab.md".


clear;
clc;
howto = 6;
intro(howto, "SYNTHESIS OF OTHER FUNCTIONS THAN GRAVITY FIELD " + ...
      "QUANTITIES, E.G. PLANETARY TOPOGRAPHIES", ...
      "This HOWTO demonstrates synthesis of the Earth's topography.  " + ...
      "The same method can be used to synthesize any function on a " + ...
      "sphere essentially.");






% Synthesis of the Earth's topography
% =============================================================================

fprintf("\n\n\n\n");
fprintf("-------------------\n");
fprintf("Synthesis of the Earth's topography\n");
fprintf("-------------------\n");
fprintf("\n");
fprintf("To synthesize the Earth's topography, we need to perform a " + ...
        "basic *surface* spherical harmonic synthesis.  This can be " + ...
        "achieved with the *surface* synthesis of the gravitational " + ...
        "potential, see the equation for ""V"" in\n" + ...
        "\n" + ...
        "   ""https://blazejbucha.com/graflab/" + ...
        "Definition_of_functionals_of_the_geopotential_used_in_" + ...
        "GrafLab_software.pdf"".\n" + ...
        "\n" + ...
        "We have only have to set " + ...
        """GM = 1.0"", ""R = 1.0"" and the radius of the evaluation " + ...
        "points to ""r = 1.0"".  Obviously, we have to do the synthesis " + ...
        "on the unit sphere, so ""crd = 1"".  Finally, set " + ...
        """quantity"" to ""11"" (see ""../doc/graflab.md"").\n");
fprintf("\n");


GM                = 1.0;
R                 = 1.0;
nmin              = 0;
nmax              = 360;
ellipsoid         = 1;  % GRS80
GGM_path          = '../data/input/DTM2006.mat';
crd               = 1;  % Evaluation points are defined in spherical 
                        % coordinates
point_type        = 0;  % Computation at a grid
lat_grd_min       = -90.0;
lat_grd_step      =   1.0;
lat_grd_max       =  90.0;
lon_grd_min       =   0.0;
lon_grd_step      = lat_grd_step;
lon_grd_max       = 360.0;
h_grd             =   0.0; % Note that the synthesis is done here in a grid,
                           % so "h_grd" needs to be set to a height above the 
                           % sphere with the radius "R", hence "0.0" (see
                           % "../doc/graflab.md").  In this way, the radius of 
                           % the evaluation points "r" is "1.0".  If you do the 
                           % synthesis at scattered points, you should set 
                           % "h_sctr" to "1.0".
out_path          = '../data/output/howto06-topography';
quantity_or_error = 0;
quantity          = [11];  % Gravitational potential; in this case, however, 
                           % gravitational potential
fnALFs            = 1;
export_data_txt   = 1;
export_report     = 1;
export_data_mat   = 1;
display_data      = 2;
graphic_format    = 6;
colormap          = 1;
number_of_colors  = 60;
dpi               = 300;
status_bar        = 1;


% Do the synthesis
out = GrafLab('OK', ...
    GM, ...
    R, ...
    nmin, ...
    nmax, ...
    ellipsoid, ...
    GGM_path, ...
    crd, ...
    point_type, ...
    lat_grd_min, ...
    lat_grd_step, ...
    lat_grd_max, ...
    lon_grd_min, ...
    lon_grd_step, ...
    lon_grd_max, ...
    h_grd, ...
    [], ...
    [], ...
    [], ...
    [], ...
    out_path, ...
    quantity_or_error, ...
    quantity, ...
    fnALFs, ...
    [], ...
    export_data_txt, ...
    export_report, ...
    export_data_mat, ...
    display_data, ...
    graphic_format, ...
    colormap, ...
    number_of_colors, ...
    dpi, ...
    status_bar);


fprintf("\n");
fprintf("You may now take a look at the ""%s*"" files.\n\n", out_path);
fprintf("The ""%s*_Gravitational_potential.png"" file shows the " + ...
        "synthesized topography.\n", out_path);
fprintf("\n");
fprintf("In the very same way, you can synthesize any real " + ...
        "function on a sphere essentially.\n\n");


% =============================================================================






outro(howto);
